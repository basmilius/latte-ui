/*!
 * Copyright (c) 2018-2020 - Bas Milius <bas@mili.us>
 *
 * This file is part of the Latte UI package.
 *
 * For the full copyright and license information, please view the
 * LICENSE file that was distributed with this source code.
 */
@import "math";

@function luminance ($color)
{
	$rgb: (
			"red": red($color),
			"green": green($color),
			"blue": blue($color)
	);

	@each $name, $value in $rgb
	{
		$value: $value / 255;

		@if $value < 0.03928
		{
			$value: $value / 12.92;
		} @else
		{
			$value: ($value + .055) / 1.055;
			$value: pow($value, 2); // Second argument used to be 2.4, but dart-sass doesn't support it anymore.
		}

		$rgb: map-merge($rgb, ($name: $value));
	}

	@return (map-get($rgb, "red") * .2126) + (map-get($rgb, "green") * .7152) + (map-get($rgb, "blue") * .0722);
}

@function dark-or-light($color, $dark, $light, $delta: 0.5)
{
	@if (luminance($color) < $delta)
	{
		@return $light;
	} @else
	{
		@return $dark;
	}
}

@function latte-rgb($r, $g: null, $b: null )
{
	@if $g == null
	{
		@return unquote("rgb(#{$r})");
	}

	@if $g and $b
	{
		@return unquote("rgb(#{$r}, #{$g}, #{$b})");
	}

	@error "Invalid argument count.";
}

@function latte-rgba($r, $g, $b: null, $a: null )
{
	@if $b == null
	{
		@return unquote("rgba(#{$r}, #{$g})");
	}

	@if $b and $a
	{
		@return unquote("rgba(#{$r}, #{$g}, #{$b}, #{$a})");
	}

	@error "Invalid argument count.";
}

@function shade($color, $percentage)
{
	@return mix(black, $color, $percentage);
}

@function tint($color, $percentage)
{
	@return mix(white, $color, $percentage);
}
